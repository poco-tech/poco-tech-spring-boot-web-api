plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.openapi.generator" version "5.3.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
	compileOnly 'io.swagger:swagger-annotations:1.6.5'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task buildApiDoc(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){
	generatorName = "html2"
	inputSpec = "$rootDir/src/main/resources/api-schema.yaml".toString()
	outputDir = "$buildDir/apidoc".toString()
}

task buildSpringServer(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/api-schema.yaml".toString()
	outputDir = "$buildDir/spring".toString()
	apiPackage = "com.example.todoapi.controller"
	modelPackage = "com.example.todoapi.model"
	configOptions = [
			interfaceOnly: "true"
	]
}

compileJava.dependsOn tasks.buildSpringServer
sourceSets.main.java.srcDir "$buildDir/spring/src/main/java"